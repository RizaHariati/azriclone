import { useSession } from "next-auth/react";
import Head from "next/head";
import { useState } from "react";
import { wrapper } from "../app/store";
import { setFriendData } from "../app/store/slices/friend";
import {
  closeLoading,
  openLoading,
  setPosts,
  setStories,
} from "../app/store/slices/post";
import MainContent from "../components/HomePage/MainContent";
import MainLeftSidebar from "../components/HomePage/MainLeftSidebar";
import MainRightSidebar from "../components/HomePage/MainRightSidebar";
import WelcomeSection from "../components/HomePage/WelcomeSection";
import { PostType } from "../typing.d";

const URL_USER = "https://dummyapi.io/data/v1/user?";
const URL_POST = "https://dummyapi.io/data/v1/post?";

const config = {
  method: "GET",
  headers: { "app-id": "615d134132c9c40bf2a39437" },
};

const Home = () => {
  const { data: session } = useSession();

  if (!session) {
    return <WelcomeSection />;
  } else {
    return (
      <div>
        <Head>
          <title>AzriClone || Home</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className="main-container ">
          <MainLeftSidebar />
          <MainContent />
          <MainRightSidebar />
        </main>
      </div>
    );
  }
};

export default Home;

export const getServerSideProps = wrapper.getServerSideProps(
  (store) => async () => {
    try {
      const responseStory = await fetch(URL_POST + "page=0&limit=5", config);
      const story = await responseStory.json();
      if (story.data) {
        store.dispatch(setStories(story.data));
      }

      const responseFriend = await fetch(URL_USER, config);
      const friend = await responseFriend.json();
      if (friend.data) {
        store.dispatch(setFriendData(friend.data));
      }

      const responsePost = await fetch(URL_POST + "page=1&limit=5", config);
      const post = await responsePost.json();

      if (post.data) {
        const postData: PostType[] = post.data;
        store.dispatch(setPosts(postData));
      }
    } catch (error) {
      console.log(error);
    }
    return {
      props: {},
    };
  }
);
